@model KC_MGMT_ASPClient.Models.Employee

@{
    ViewBag.Title = "Редатирование сотрудника";
}

<h2>Редатирование сотрудника</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.employee_name, "Имя", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.employee_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.employee_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.positionID, "Должность", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("positionID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.positionID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.salary, "Зарплата", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.salary, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.salary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.address, "Адрес", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control"} })
                @Html.ValidationMessageFor(model => model.address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.phone, "Телефон", htmlAttributes: new { @class = "control-label col-md-2", htmlAttributes = new { @pattern = "[0-9]{3}-[0-9]{3}-[0-9]{3}" } })
            <div class="col-md-10">
                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
                
                @*<form id="phone_form" method="post">
                        <input name="phone" type="number" class="form-control" pattern="[0-9]{3}-[0-9]{3}-[0-9]{3}" />
                </form>*@

                @*@if (Model.phone.HasValue)
                {
                    <input id="phone" name="phone" type="number" formmethod="get">
                } else {
                    <input id="phone" name="phone" type="number" formmethod="post">
                }*@
    
                @Html.ValidationMessageFor(model => model.phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
                <a href="/Employees/Index" class="btn btn-info" role="button">Отмена</a>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
